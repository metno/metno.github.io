<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>IT.met.no</title><link href="/" rel="alternate"></link><link href="/feeds/blog.atom.xml" rel="self"></link><id>/</id><updated>2015-02-20T00:00:00+01:00</updated><entry><title>Kodeklubben</title><link href="/posts/2015/02/kodeklubben.html" rel="alternate"></link><updated>2015-02-20T00:00:00+01:00</updated><author><name>martin.l.satra@met.no</name></author><id>tag:,2015-02-20:posts/2015/02/kodeklubben.html</id><summary type="html">&lt;p&gt;Her finner du presentasjoner og kodeeksempler fra &lt;a href="http://www.kidsakoder.no/kodeklubben/"&gt;Kodeklubben&lt;/a&gt; sitt besøk på Meteorologisk institutt (MET) 18. februar 2015. Vi demonstrerer bruk av &lt;a href="http://api.met.no"&gt;http://api.met.no&lt;/a&gt; og kart-tjenestene til MET for bruk i egne kodeprosjekt.&lt;/p&gt;
&lt;h2&gt;IPython Notebook&lt;/h2&gt;
&lt;p&gt;Du må ha IPython Notebook installert for å kunne jobbe videre på Notebook-en vi laget på tirsdag. Se "Install" på &lt;a href="http://ipython.org/"&gt;http://ipython.org&lt;/a&gt; for informasjon om hvordan IPython Notebook kan installeres på forskjellige plattformer.&lt;/p&gt;
&lt;h2&gt;Presentasjoner og kodeeksempler&lt;/h2&gt;
&lt;p&gt;Her finner du alle presentasjoner og kodeeksempler vi gikk igjennom:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="/files/itut/met_kodeklubben.pdf"&gt;Presentasjon av MET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/gist/anonymous/bf417150abe1f7dca2c3"&gt;IPython Notebook-en med blant annet eksempler på bruk av http://api.met.no&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/files/itut/kodeklubben.tgz"&gt;Presentasjon og kodeeksempler på bruk av kart-tjenestene til MET&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="visit"></category><category term="code"></category><category term="examples"></category><category term="presentations"></category></entry><entry><title>How to Use Cloud-init to Customize New OpenStack VMs</title><link href="/posts/2015/02/use-cloud-init-to-customize-new-openstack-vms.html" rel="alternate"></link><updated>2015-02-05T00:00:00+01:00</updated><author><name>arne.sund@met.no</name></author><id>tag:,2015-02-05:posts/2015/02/use-cloud-init-to-customize-new-openstack-vms.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="http://arnesund.com/2015/02/05/how-to-use-cloud-init-to-customize-new-openstack-vms/"&gt;arnesund.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When creating a new instance (VM) on OpenStack with one of the standard &lt;a href="http://cloud-images.ubuntu.com/releases/"&gt;Ubuntu Cloud images&lt;/a&gt;, the next step is typically to install packages and configure applications. Instead of doing that manually every time, OpenStack enables automatic setup of new instances using &lt;a href="http://cloudinit.readthedocs.org/en/latest/"&gt;Cloud-init&lt;/a&gt;. Cloud-init runs on first boot of every new instance and initializes it according to a provided script or config file. The functionality is part of the Ubuntu image and works the same way regardless of the cloud provider used (Amazon, RackSpace, private OpenStack cloud). Cloud-init is also available for &lt;a href="http://cloudinit.readthedocs.org/en/latest/topics/availability.html"&gt;other distributions&lt;/a&gt; as well.&lt;/p&gt;
&lt;h2&gt;Creating a customization script&lt;/h2&gt;
&lt;h3&gt;Standard Bash script&lt;/h3&gt;
&lt;p&gt;Perhaps the easiest way to get started is to create a standard Bash script that Cloud-init runs on first boot. Here is a simple example to get Apache2 up and running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cat &amp;gt; cloudinit.sh &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; #!/bin/bash&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; apt-get update&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; apt-get -y install apache2&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; a2ensite 000-default&lt;/span&gt;
&lt;span class="s"&gt;&amp;gt; EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This small script installs the Apache2 package and enables the default site. Of course, you’d likely need to do more configuration here before enabling the site, like an rsync of web content to document root and enabling TLS.&lt;/p&gt;
&lt;h2&gt;Launch a new web instance&lt;/h2&gt;
&lt;p&gt;Use the nova CLI command to launch an instance named &lt;code&gt;web1&lt;/code&gt; and supply the filename of the customization script with the &lt;code&gt;-–user-data&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nova boot --flavor m1.medium --image &lt;span class="s2"&gt;&amp;quot;Ubuntu CI trusty 2014-09-22&amp;quot;&lt;/span&gt; --key-name arnes --user-data&lt;span class="o"&gt;=&lt;/span&gt;cloudinit.sh web1
+-----------+---------------------+
&lt;span class="p"&gt;|&lt;/span&gt; Property  &lt;span class="p"&gt;|&lt;/span&gt; Value               &lt;span class="p"&gt;|&lt;/span&gt;
+-----------+---------------------+
&lt;span class="p"&gt;|&lt;/span&gt; name      &lt;span class="p"&gt;|&lt;/span&gt; web1                &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; flavor    &lt;span class="p"&gt;|&lt;/span&gt; m1.medium &lt;span class="o"&gt;(&lt;/span&gt;3&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To access the instance from outside the cloud, allocate a new floating IP and associate it with the new instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nova floating-ip-create public
+------------+-----------+----------+--------+
&lt;span class="p"&gt;|&lt;/span&gt; Ip         &lt;span class="p"&gt;|&lt;/span&gt; Server Id &lt;span class="p"&gt;|&lt;/span&gt; Fixed Ip &lt;span class="p"&gt;|&lt;/span&gt; Pool   &lt;span class="p"&gt;|&lt;/span&gt;
+------------+-----------+----------+--------+
&lt;span class="p"&gt;|&lt;/span&gt; 10.99.1.71 &lt;span class="p"&gt;|&lt;/span&gt;           &lt;span class="p"&gt;|&lt;/span&gt; -        &lt;span class="p"&gt;|&lt;/span&gt; public &lt;span class="p"&gt;|&lt;/span&gt;
+------------+-----------+----------+--------+

nova floating-ip-associate web1 10.99.1.71
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;The new web instance has Apache running right from the start, no manual steps needed:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Apache2 default page" src="/images/apache2-set-up-using-cloudinit.png" /&gt;&lt;/p&gt;
&lt;h3&gt;More Cloud-init options: Cloud-Config syntax&lt;/h3&gt;
&lt;p&gt;Cloud-init can do more than just run bash scripts. Using cloud-config syntax many different actions are possible. The documentation has &lt;a href="http://cloudinit.readthedocs.org/en/latest/topics/examples.html"&gt;many useful examples&lt;/a&gt; of cloud-config syntax to add user accounts, configure mount points, initialize the instance as a Chef/Puppet client and much more.&lt;/p&gt;
&lt;p&gt;For example, the same Apache2 initialization as above can be done with the following cloud-config statements:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#cloud-config
packages:
 - apache2
runcmd:
 - [ a2ensite, &amp;quot;000-default&amp;quot; ]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Including scripts or config files&lt;/h2&gt;
&lt;p&gt;Including a script or config file from an external source is also possible. This can be useful if the config file is under revision control in Git. Including files is easy, just replace the script contents with an include statement and the URL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#include
https://gist.githubusercontent.com/arnesund/7332e15c5eb9df8c55aa/raw/0bd63296980bb4d8bf33387cfdb2eb60b964490d/cloudinit.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;a href="Simple cloud-config example"&gt;gist&lt;/a&gt; contains the same cloud-config statements as above, so the end result it the same.&lt;/p&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;Cloud-init logs messages to &lt;code&gt;/var/log/cloud-init.log&lt;/code&gt; and in my tests even debug level messages were logged. In addition, Cloud-init records all console output from changes it performs to &lt;code&gt;/var/log/cloud-init-output.log&lt;/code&gt;. That makes it easy to catch errors in the initialization scripts, like for instance when I omitted ‘-y’ to apt-get install and package installation failed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The following NEW packages will be installed:
 apache2 apache2-bin apache2-data libapr1 libaprutil1 libaprutil1-dbd-sqlite3
 libaprutil1-ldap ssl-cert
0 upgraded, 8 newly installed, 0 to remove and 88 not upgraded.
Need to get 1284 kB of archives.
After this operation, 5342 kB of additional disk space will be used.
Do you want to continue? [Y/n] Abort.
/var/lib/cloud/instance/scripts/part-001: line 4: a2ensite: command not found
2015-02-05 09:59:56,943 - util.py[WARNING]: Failed running /var/lib/cloud/instance/scripts/part-001 [127]
2015-02-05 09:59:56,944 - cc_scripts_user.py[WARNING]: Failed to run module scripts-user (scripts in /var/lib/cloud/instance/scripts)
2015-02-05 09:59:56,945 - util.py[WARNING]: Running scripts-user (&amp;lt;module &amp;#39;cloudinit.config.cc_scripts_user&amp;#39; from &amp;#39;/usr/lib/python2.7/dist-packages/cloudinit/config/cc_scripts_user.pyc&amp;#39;&amp;gt;) failed
Cloud-init v. 0.7.5 finished at Thu, 05 Feb 2015 09:59:56 +0000. Datasource DataSourceOpenStack [net,ver=2]. Up 22.14 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The line "Do you want to continue? [Y/n] Abort." is a clear indicator that apt-get install failed since it expected user input. Most CLI tools can be run without user input by just passing the correct options, like '-y' to apt-get. After correcting that error, the output is as expected:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The following NEW packages will be installed:
 apache2 apache2-bin apache2-data libapr1 libaprutil1 libaprutil1-dbd-sqlite3
 libaprutil1-ldap ssl-cert
0 upgraded, 8 newly installed, 0 to remove and 88 not upgraded.
Need to get 1284 kB of archives.
After this operation, 5342 kB of additional disk space will be used.
Get:1 http://nova.clouds.archive.ubuntu.com/ubuntu/ trusty/main libapr1 amd64 1.5.0-1 [85.1 kB]
Get:2 http://nova.clouds.archive.ubuntu.com/ubuntu/ trusty/main libaprutil1 amd64 1.5.3-1 [76.4 kB]
...
Cloud-init v. 0.7.5 running &amp;#39;modules:final&amp;#39; at Thu, 05 Feb 2015 12:35:49 +0000. Up 38.42 seconds.
Site 000-default already enabled
Cloud-init v. 0.7.5 finished at Thu, 05 Feb 2015 12:35:49 +0000. Datasource DataSourceOpenStack [net,ver=2]. Up 38.56 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This also reveals that the command "a2ensite 000-default" is not needed since the default site is enabled already. However, it’s included here as an example of how to run shell commands using cloud-config statements.&lt;/p&gt;
&lt;h2&gt;Testing vs Production&lt;/h2&gt;
&lt;p&gt;Using Cloud-init to get new instances to the desired state is nice when testing and a necessary step when deploying production instances. In a production context, one would probably use Cloud-init to initialize the instance as a Chef or Puppet client. From there, Chef/Puppet takes over the configuration task and will make sure the instance is set up according to the desired role it should fill. Cloud-init makes the initial bootstrapping of the instance easy.&lt;/p&gt;</summary><category term="openstack"></category><category term="cloud-init"></category><category term="bootstrap"></category><category term="nova boot"></category><category term="ubuntu"></category><category term="cloud-config"></category><category term="howto"></category></entry><entry><title>Remove unused kernels</title><link href="/posts/2015/01/remove-kernel.html" rel="alternate"></link><updated>2015-01-20T00:00:00+01:00</updated><author><name>arnulf.heimsbakk@met.no</name></author><id>tag:,2015-01-20:posts/2015/01/remove-kernel.html</id><summary type="html">&lt;p&gt;Removes all but current kernel and headers for freeing up disk space. This is a note for internal use and tested for Ubuntu Precise. Use at your own risk :) &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dpkg-query -f &lt;span class="s1"&gt;&amp;#39;${Package}\n&amp;#39;&lt;/span&gt; -W &lt;span class="p"&gt;|&lt;/span&gt;  egrep &lt;span class="s1"&gt;&amp;#39;linux-(headers|image)-[[:digit:]].*(|-generic)&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v &lt;span class="k"&gt;$(&lt;/span&gt;uname -r &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/-generic//&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo xargs apt-get -q -q -yy --purge remove
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Breakdown&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;List all packages.&lt;/li&gt;
&lt;li&gt;Find only linux-image and linux-header packages with version number, not the two main meta packages.&lt;/li&gt;
&lt;li&gt;Remove the linux-image and linux-header for running kernel from the list.&lt;/li&gt;
&lt;li&gt;Purge all listed packages from system without asking any questions.&lt;/li&gt;
&lt;/ol&gt;
&lt;h6&gt;vim: set syn=markdown spell spl=en:&lt;/h6&gt;</summary><category term="bash"></category><category term="oneliner"></category><category term="precise"></category><category term="kernel"></category></entry><entry><title>Vagrant with OpenStack</title><link href="/posts/2015/01/vagrant-openstack.html" rel="alternate"></link><updated>2015-01-23T00:00:00+01:00</updated><author><name>arnulf.heimsbakk@met.no</name></author><id>tag:,2015-01-16:posts/2015/01/vagrant-openstack.html</id><summary type="html">&lt;p&gt;If you want to use &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; with &lt;a href="http://www.openstack.org"&gt;OpenStack&lt;/a&gt;, you need to prepare &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; with installing the &lt;a href="https://github.com/cloudbau/vagrant-openstack-plugin"&gt;vagrant-openstack-plugin&lt;/a&gt;. I had some problems installing it directly through &lt;code&gt;vagrant plugin install&lt;/code&gt;. I had to clone it from &lt;a href="https://github.com"&gt;Github&lt;/a&gt; and install it manually. &lt;/p&gt;
&lt;h2&gt;One time configuration&lt;/h2&gt;
&lt;h3&gt;Install OpenStack plugin in Vagrant&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install ruby1.9.1 git virtualbox
&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp
&lt;span class="c"&gt;# At writing moment the latest version of Vagrant is the following version.&lt;/span&gt;
wget https://dl.bintray.com/mitchellh/vagrant/vagrant_1.7.2_x86_64.deb
sudo dpkg -i vagrant_1.7.2_x86_64.deb
git clone https://github.com/cloudbau/vagrant-openstack-plugin
&lt;span class="nb"&gt;cd &lt;/span&gt;vagrant-openstack-plugin
gem build vagrant-openstack-plugin.gemspec
vagrant plugin install vagrant-openstack-plugin-*.gem
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add a dummy box to &lt;a href="https://www.vagrantup.com"&gt;Vagrant&lt;/a&gt; thats needed by the plugin.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vagrant box add dummy https://github.com/cloudbau/vagrant-openstack-plugin/raw/master/dummy.box
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Download OpenStack RC file&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Log into OpenStack&lt;/li&gt;
&lt;li&gt;Download OpenStack API RC file&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Project&lt;/code&gt; -&amp;gt; &lt;code&gt;Compute&lt;/code&gt; -&amp;gt; &lt;code&gt;Access &amp;amp; Security&lt;/code&gt; -&amp;gt; &lt;code&gt;API Access&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Down RC file by hitting &lt;code&gt;Download OpenStack RC File&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Put &lt;code&gt;$USER-openrc.sh&lt;/code&gt; in your &lt;code&gt;~/&lt;/code&gt; or somewhere you prefer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Configure a Vagrant VM&lt;/h2&gt;
&lt;h3&gt;Vagrantfile&lt;/h3&gt;
&lt;p&gt;This is a default generic Vagrant file which starts a &lt;code&gt;m1.tiny&lt;/code&gt; flavor image of Ubuntu Utopic. It requires that you already have added your ssh key to OpenStack. Please add your ssh key with the name &lt;code&gt;$USER_ssh_key&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vagrant-openstack-plugin&amp;#39;&lt;/span&gt;

&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dummy&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/vagrant&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rsync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;rsync__exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.git/&amp;quot;&lt;/span&gt;

  &lt;span class="c1"&gt;# Make sure the private key from the key pair is provided&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;private_key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/.ssh/id_rsa&amp;quot;&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="ss"&gt;:openstack&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_USERNAME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_key&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flavor&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/m1.tiny/&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Ubuntu CI utopic 2014-09-18&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_AUTH_URL&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/tokens&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keypair_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OS_USERNAME&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;_ssh_key&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh_username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ubuntu&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# The tenant have two networks, so need to specify at least one&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;vagrant&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floating_ip&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:auto&lt;/span&gt; 
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floating_ip_pool&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;public&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap.sh&amp;quot;&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="no"&gt;SCRIPT&lt;/span&gt;
&lt;span class="sh"&gt;    # Set your country code here to get a local repositroy&lt;/span&gt;
&lt;span class="sh"&gt;    CN=&amp;quot;no&amp;quot;&lt;/span&gt;
&lt;span class="sh"&gt;    grep -q repo.met.no /etc/apt/sources.list || sed -i~ &amp;quot;s#nova.clouds.archive.ubuntu.com#$CN.archive.ubuntu.com#g&amp;quot; /etc/apt/sources.list&lt;/span&gt;
&lt;span class="sh"&gt;    apt-get update&lt;/span&gt;
&lt;span class="no"&gt;  SCRIPT&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;myvm&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;bootstrap.sh&lt;/h3&gt;
&lt;p&gt;Create your custom bootstrap file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Your aditional bootstrap here...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running Vagrant&lt;/h2&gt;
&lt;p&gt;Remember to source your OpenStack RC file before you run Vagrant up. You need to do that in each shell windows you are going to run Vagrant in.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/&lt;span class="nv"&gt;$USER&lt;/span&gt;-openrc.sh
vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;vim: set syn=markdown spell spl=en:&lt;/h6&gt;</summary><category term="howto"></category><category term="openstack"></category><category term="vagrant"></category></entry></feed>